<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eac.admin.mapper.SysRoleMapper">

    <select id="querySysRole" parameterType="map" resultType="java.util.LinkedHashMap">
        SELECT CAST(id AS CHAR) AS "id",role_code AS "roleCode",role_name AS "roleName",role_description AS "roleDescription",create_time AS "createTime"
        FROM sys_role
  	    WHERE 1 = 1
      	<if test="roleName != null and roleName != ''">
    		AND role_name LIKE CONCAT('%',#{roleName},'%')
    	</if>
        <if test="tenantCode != null and tenantCode != ''">
            AND tenant_code = #{tenantCode}
        </if>
        <if test="sort != null and sequence != null">
            ORDER BY ${sort} ${sequence}
        </if>
    </select>

    <select id="queryRoleName" resultType="java.util.LinkedHashMap">
        SELECT msr.role_name AS "name",CAST(msr.id AS CHAR) AS "value"
        FROM sys_role msr
        WHERE msr.tenant_code = #{tenantCode,jdbcType=VARCHAR}
        <if test="assign == 0">
            AND NOT EXISTS (SELECT 1 FROM sys_role_user msru WHERE msr.id = msru.role_id AND msru.user_id = #{userId,jdbcType=BIGINT} AND msru.post_code = #{postCode,jdbcType=VARCHAR})
        </if>
        <if test="assign == 1">
            AND EXISTS (SELECT 1 FROM sys_role_user msru WHERE msr.id = msru.role_id AND msru.user_id = #{userId,jdbcType=BIGINT} AND msru.post_code = #{postCode,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="queryRoleCode" resultType="java.util.LinkedHashMap">
        SELECT role_code AS "name",role_code AS "value"
        FROM sys_role
    </select>

    <select id="queryRoleCodeList" resultType="String">
        SELECT role_code AS "roleCode"
        FROM sys_role
    </select>

    <select id="queryRoleNameCheckbox" resultType="java.util.LinkedHashMap">
        SELECT CAST(id AS CHAR) AS "value",role_name AS "label"
        FROM sys_role
    </select>

    <select id="getSysRoleByRoleCode" resultType="Integer">
        SELECT DISTINCT 1
        FROM sys_role
        WHERE role_code = #{roleCode,jdbcType=VARCHAR}
    </select>

    <select id="queryUserIdByRoleId" parameterType="Long" resultType="Long">
        SELECT user_id
        FROM sys_role_user
        WHERE role_id = #{roleId,jdbcType=BIGINT}
    </select>

    <select id="queryRoleIdByUserId" parameterType="Long" resultType="Long">
        SELECT role_id
        FROM sys_role_user
        WHERE user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="queryRoleData" resultType="String">
        SELECT mrd.data_field AS "dataField"
        FROM sys_role_data mrd
        WHERE mrd.menu_code = #{menuCode,jdbcType=VARCHAR} AND EXISTS (SELECT 1 FROM sys_role msr,sys_role_user msru,sys_user msu WHERE msr.id = msru.role_id AND msu.id = msru.user_id AND msr.role_code = mrd.role_code AND msu.username = #{username,jdbcType=VARCHAR})
    </select>

    <insert id="insertSysRole" parameterType="SysRole">
        INSERT INTO sys_role
            (id, role_code, role_name, role_description, tenant_code)
        VALUES
            (#{id,jdbcType=BIGINT}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleDescription,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSysRoleUser">
        INSERT INTO sys_role_user
            (id, role_id, user_id, post_code)
        VALUES
            (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{postCode,jdbcType=VARCHAR})
    </insert>

    <update id="updateSysRole" parameterType="SysRole">
        UPDATE sys_role
        <set>
            <if test="roleName != null and roleName != ''">role_name=#{roleName},</if>
            role_description=#{roleDescription,jdbcType=VARCHAR}
        </set>
        WHERE id=#{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteSysRole">
        DELETE sys_role,sys_role_menu,sys_role_menubutton
        FROM sys_role LEFT JOIN sys_role_menu ON sys_role.id = sys_role_menu.role_id LEFT JOIN sys_role_menubutton ON sys_role.role_code = sys_role_menubutton.role_code
        WHERE sys_role.id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id,jdbcType=BIGINT}
		</foreach>
	</delete>

    <delete id="deleteSysRoleUser">
        DELETE FROM sys_role_user WHERE user_id = #{userId,jdbcType=BIGINT} OR role_id = #{roleId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteSysRoleUserPost">
        DELETE FROM sys_role_user WHERE user_id = #{userId,jdbcType=BIGINT} AND post_code = #{postCode,jdbcType=VARCHAR}
    </delete>

</mapper>
